---
- name: Start Immich
  block:
    - name: Create Immich Data Directory
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        # owner: "{{ homelab_user }}"
        # group: "{{ homelab_group_name }}"
        mode: u=rwX,g=rwX,o=rX
      with_items:
        - "{{ immich_data_directory }}"
        - "{{ immich_data_directory }}/data"
        - "{{ immich_data_directory }}/database"
        - "{{ immich_data_directory }}/libraries"
    - name: Create Immich network
      community.docker.docker_network:
        name: "{{ immich_network_name }}"
    - name: Immich Postgres Docker Container
      community.docker.docker_container:
        name: "immich-postgres"
        image: "{{ immich_database_image }}:{{ immich_database_tag }}"
        pull: true
        volumes:
          - "{{ immich_data_directory }}/db:/var/lib/postgresql/data:rw"
        networks:
          - name: "{{ immich_network_name }}"
        network_mode: "{{ immich_network_name }}"
        env:
          POSTGRES_USER: "{{ immich_database_username }}"
          POSTGRES_PASSWORD: "{{ immich_database_password }}"
          POSTGRES_DB: immich
          PG_DATA: /var/lib/postgresql/data
          POSTGRES_INITDB_ARGS: '--data-checksums'
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -d immich -U {{ immich_database_username }}"]
          interval: 5m
          start_period: 5m
    - name: Immich Redis Docker Container
      community.docker.docker_container:
        name: "immich-redis"
        image: "{{ immich_redis_image }}:{{ immich_redis_tag }}"
        pull: true
        command: --save 60 1 --loglevel warning
        volumes:
          - "{{ immich_data_directory }}/redis:/data:rw"
        networks:
          - name: "{{ immich_network_name }}"
        labels:
          traefik.enable: "false"
        restart_policy: always
        memory: "1g"
        healthcheck:
          test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
          start_period: 20s
          interval: 30s
          retries: 5
          timeout: 3s

    - name: Immich Server Docker Container
      community.docker.docker_container:
        name: "immich-server"
        image: "{{ immich_image_name }}:{{ immich_image_version }}"
        pull: true
        command: ["start.sh", "immich"]
        ports:
          - "2283:3001"
          # - "{{ immich_port }}:3001"
        networks:
          - name: "{{ immich_network_name }}"
        volumes:
          - "{{ immich_data_directory }}/libraries:/usr/src/app/upload:rw"
          - "{{ immich_data_directory }}/data:/data:rw"
          - "{{ immich_source_media_directory }}:/mnt/nextcloud:ro"
          - "/etc/localtime:/etc/localtime:ro"
        env:
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ immich_user_id }}"
          PGID: "{{ immich_group_id }}"
          DB_USERNAME: "{{ immich_database_username }}"
          DB_PASSWORD: "{{ immich_database_password }}"
          DB_DATABASE_NAME: "immich"
          IMMICH_LOG_LOEVEL: "debug"
          NODE_ENV: "production"
          IMMICH_VERSION: "{{ immich_image_version }}"
          REDIS_HOSTNAME: "immich-redis"
          DB_HOSTNAME: "immich-postgres"
          DB_PORT: "{{ immich_database_port }}"
          JWT_SECRET: "{{ immich_jwt_secret }}"
          ENABLE_MAPBOX: "{{ immich_enable_mapbox }}"
          MAPBOX_KEY: "{{ immich_mapbox_key }}"
          UPLOAD_LOCATION: "{{ immich_upload_location }}"
          PUBLIC_LOGIN_PAGE_MESSAGE: "{{ immich_public_login_page_message }}"
        restart_policy: unless-stopped
        memory: "4g"
        labels:
          traefik.enable: "{{ immich_available_externally | string }}"
          traefik.http.routers.immich.rule: Host(`{{ immich_hostname }}.{{ homelab_domain }}`)
          traefik.http.routers.immich.tls.certresolver: letsencrypt
          traefik.http.routers.immich.tls.domains[0].main: "{{ homelab_domain }}"
          traefik.http.routers.immich.tls.domains[0].sans: "*.{{ homelab_domain }}"
          traefik.http.routers.immich.middlewares: default-whitelist@file
          traefik.http.services.immich.loadbalancer.server.port: "3001"
        links:
          - immich-postgres:database
          - immich-redis:redis
    - name: Immich Microservices Docker Container
      community.docker.docker_container:
        name: "immich-microservices"
        image: "{{ immich_image_name }}:{{ immich_image_version }}"
        pull: true
        command: ["start.sh", "microservices"]
        networks:
          - name: "{{ immich_network_name }}"
        volumes:
          - "{{ immich_data_directory }}/libraries:/usr/src/app/upload:rw"
          - "{{ immich_data_directory }}/data:/data:rw"
          - "{{ immich_source_media_directory }}:/mnt/nextcloud:ro"
          - "/etc/localtime:/etc/localtime:ro"
        env:
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ immich_user_id }}"
          PGID: "{{ immich_group_id }}"
          DB_USERNAME: "{{ immich_database_username }}"
          DB_PASSWORD: "{{ immich_database_password }}"
          DB_DATABASE_NAME: "immich"
          IMMICH_LOG_LOEVEL: "debug"
          NODE_ENV: "production"
          IMMICH_VERSION: "{{ immich_image_version }}"
          REDIS_HOSTNAME: "immich-redis"
          DB_HOSTNAME: "immich-postgres"
          DB_PORT: "{{ immich_database_port }}"
          JWT_SECRET: "{{ immich_jwt_secret }}"
          ENABLE_MAPBOX: "{{ immich_enable_mapbox }}"
          MAPBOX_KEY: "{{ immich_mapbox_key }}"
          UPLOAD_LOCATION: "{{ immich_upload_location }}"
          PUBLIC_LOGIN_PAGE_MESSAGE: "{{ immich_public_login_page_message }}"
        restart_policy: unless-stopped
        memory: "4g"
        labels:
          traefik.enable: "false"
        links:
          - immich-postgres:database
          - immich-redis:redis
    - name: Immich Machine Learning Docker Container
      community.docker.docker_container:
        name: "immich-machine-learning"
        image: "{{ immich_machine_learning_image_name }}:{{ immich_image_version }}"
        pull: true
        volumes:
          - "{{ immich_data_directory }}/model-cache:/cache:rw"
        env:
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ immich_user_id }}"
          PGID: "{{ immich_group_id }}"
          DB_USERNAME: "{{ immich_database_username }}"
          DB_PASSWORD: "{{ immich_database_password }}"
          DB_DATABASE_NAME: "immich"
          IMMICH_LOG_LOEVEL: "debug"
          NODE_ENV: "production"
          IMMICH_VERSION: "{{ immich_image_version }}"
          REDIS_HOSTNAME: "redis"
          DB_HOSTNAME: "database"
          DB_PORT: "{{ immich_database_port }}"
          JWT_SECRET: "{{ immich_jwt_secret }}"
          ENABLE_MAPBOX: "{{ immich_enable_mapbox }}"
          MAPBOX_KEY: "{{ immich_mapbox_key }}"
          UPLOAD_LOCATION: "{{ immich_upload_location }}"
          PUBLIC_LOGIN_PAGE_MESSAGE: "{{ immich_public_login_page_message }}"
        restart_policy: unless-stopped
        memory: "4g"
  when: immich_enabled is true
- name: Stop Immich
  block:
    - name: Stop Immich
      community.docker.docker_container:
        name: "immich-server"
        state: absent
    - name: Stop Immich Microservices
      community.docker.docker_container:
        name: "immich-microservices"
        state: absent
    - name: Stop Immich Machine Learning
      community.docker.docker_container:
        name: "immich-machine-learning"
        state: absent
    - name: Stop Immich Postgres
      community.docker.docker_container:
        name: "immich-postgres"
        state: absent
    - name: Stop Immich Redis
      community.docker.docker_container:
        name: "immich-redis"
        state: absent
  when: immich_enabled is false
