---
- name: Start Frigate
  when: frigate_enabled is true
  block:
    - name: Create Frigate Directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ frigate_config_directory }}"
        - "{{ frigate_media_directory }}"
    - name: Check if Frigate config.yml exists
      stat:
        path: "{{ frigate_config_directory }}/config.yml"
      register: config_file_stat
    - name: Template Frigate config.yml (if not exists)
      template:
        src: config.yml
        dest: "{{ frigate_config_directory }}/config.yml"
      when: not config_file_stat.stat.exists
      register: template_config
    # Can't expose ports on frigate container and set network_mode for tailscale... need to figure that out
    # Also bitwarden secrets integration is breaking somewhere in the ansible run, so I use it for ansible vault key with just, get the key then run ansible
    # - name: Tailscale Sidecar
    #   community.docker.docker_container:
    #     name: frigate-tailscale
    #     image: tailscale/tailscale
    #     hostname: frigate
    #     volumes:
    #       - "{{ frigate_config_directory }}/tailscale:/var/lib/tailscale"
    #       - "/dev/net/tun:/dev/net/tun"
    #     capabilities:
    #       - neudo _admin
    #       - sys_module
    #     command: tailscaled
    - name: Frigate Docker Container
      community.docker.docker_container:
        # network_mode: container:tailscale
        name: frigate
        image: ghcr.io/blakeblackshear/frigate:stable
        pull: true
        # TODO: do i need this?
        privileged: true # this may not be necessary for all setups
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - "{{ frigate_config_directory }}:/config:rw"
          - "{{ frigate_media_directory }}:/media/frigate:rw"
        mounts:
          - type: tmpfs
            target: /tmp/cache
            tmpfs_size: 1000000000
        ports:
          - "{{ frigate_webui_port }}:5000"
          - "{{ frigate_rtsp_port }}:8554" # RTSP feeds
          - "{{ frigate_webrtc_port }}:8555/tcp" # WebRTC over tcp
          - "{{ frigate_webrtc_port }}:8555/udp" # WebRTC over udp
        devices:
          - /dev/apex_0:/dev/apex_0 # passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
          - /dev/dri/renderD128:/dev/dri/renderD128 # should pass through the AMD iGPU
          - /dev/dri/card0:/dev/dri/card0
        # https://github.com/blakeblackshear/frigate/discussions/5392#discussioncomment-8571128
        # this is not being applied
        # memory_swappiness: 0
        env:
          TZ: "{{ homelab_timezone }}"
          LIBVA_DRIVER_NAME: radeonsi
          # TODO: see if I need to run privileged or if i can use ansible-nas user
          # running as root/priviliged for now - will need to mess with file permissions when I try to de-privilege it
          # PUID: '{{ frigate_user_id }}'
          # PGID: '{{ frigate_group_id }}'
          FRIGATE_RTSP_PASSWORD: "{{ frigate_password }}"
        restart_policy: unless-stopped
        shm_size: 1024MB # update for your cameras based on calculation above
        memory: "{{ frigate_memory }}"
        labels:
          traefik.enable: "{{ frigate_available_externally | string }}"
          traefik.http.routers.frigate.rule: Host(`{{ frigate_hostname }}.{{ homelab_domain }}`)
          traefik.http.routers.frigate.tls.certresolver: letsencrypt
          traefik.http.routers.frigate.tls.domains[0].main: "{{ homelab_domain }}"
          traefik.http.routers.frigate.tls.domains[0].sans: "*.{{ homelab_domain }}"
          traefik.http.services.frigate.loadbalancer.server.port: "5000"
          traefik.http.routers.frigate.middlewares: default-whitelist@file
- name: Stop frigate
  when: frigate_enabled is false
  block:
    - name: Stop frigate
      community.docker.docker_container:
        name: frigate
        state: absent
