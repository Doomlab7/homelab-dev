---
- name: Start Archivebox
  block:
    - name: Create Archivebox Directories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ homelab_user }}"
        group: "{{ homelab_group_name }}"
        mode: u=rwX,g=rwX,o=rX
      with_items:
        - "{{ archivebox_data_directory }}"
        - "{{ archivebox_data_directory }}/data"
    - name: Archivebox Docker Container
      community.docker.docker_container:
        name: archivebox
        image: "{{ archivebox_image_name }}:{{ archivebox_image_version }}"
        pull: true
        volumes:
          - "{{ archivebox_data_directory }}/data:/data"
        ports:
          - "{{ archivebox_port }}:8000"
        env:
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ archivebox_user_id }}"
          PGID: "{{ archivebox_group_id }}"
          ADMIN_USERNAME: "{{ archivebox_admin_user }}"            # create an admin user on first run with the given user/pass combo
          ADMIN_PASSWORD: "{{ archivebox_admin_password }}"
          CSRF_TRUSTED_ORIGINS: "https://{{ archivebox_hostname }}.{{ homelab_domain }}"  # REQUIRED for auth, REST API, etc. to work
          ALLOWED_HOSTS: "*" # set this to the hostname(s) from your CSRF_TRUSTED_ORIGINS
          PUBLIC_INDEX: "False" # set to False to prevent anonymous users from viewing snapshot list
          PUBLIC_SNAPSHOTS: "False" # set to False to prevent anonymous users from viewing snapshot content
          PUBLIC_ADD_VIEW: "False" # set to True to allow anonymous users to submit new URLs to archive
          SEARCH_BACKEND_ENGINE: "sonic" # tells ArchiveBox to use sonic container below for fast full-text search
          SEARCH_BACKEND_HOST_NAME: "sonic"
          SEARCH_BACKEND_PASSWORD: "{{ archivebox_search_backend_password }}"
          MEDIA_MAX_SIZE: "750m" # increase this filesize limit to allow archiving larger audio/video files
          TIMEOUT: "120" # increase this number to 120+ seconds if you see many slow downloads timing out
          CHECK_SSL_VALIDITY: "True" # set to False to disable strict SSL checking (allows saving URLs w/ broken certs)
          SAVE_ARCHIVE_DOT_ORG: "False" # set to False to disable submitting all URLs to Archive.org when archiving
          USER_AGENT: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.3"
        restart_policy: unless-stopped
        memory: "{{ archivebox_memory }}"
        labels:
          traefik.enable: "{{ archivebox_available_externally | string }}"
          traefik.http.routers.archivebox.rule: Host(`{{ archivebox_hostname }}.{{ homelab_domain }}`)
          traefik.http.routers.archivebox.tls.certresolver: letsencrypt
          traefik.http.routers.archivebox.tls.domains[0].main: "{{ homelab_domain }}"
          traefik.http.routers.archivebox.tls.domains[0].sans: "*.{{ homelab_domain }}"
          traefik.http.services.archivebox.loadbalancer.server.port: "8000"
          # traefik.http.routers.archivebox.middlewares: "default-whitelist@file"
    - name: Archivebox Scheduler Docker Container
      community.docker.docker_container:
        name: archivebox-scheduler
        image: "{{ archivebox_image_name }}:{{ archivebox_image_version }}"
        pull: true
        volumes:
          - "{{ archivebox_data_directory }}/data:/data"
        env:
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ archivebox_user_id }}"
          PGID: "{{ archivebox_group_id }}"
        command: schedule --foreground --update --every=day
        restart_policy: unless-stopped
        memory: "1g"
    - name: Template Sonic Config
      template:
        src: sonic.cfg
        dest: '{{ archivebox_data_directory }}/sonic.cfg'
      register: template_config
    - name: Sonic Docker Container
      community.docker.docker_container:
        name: sonic
        image: valeriansaliou/sonic:latest
        pull: true
        ports:
          - "1491:1491"
        volumes:
          - "{{ archivebox_data_directory }}/sonic:/var/lib/sonic/store"
          # TODO: OG docker compose curled this in a build, I can just put it in templates and use ansible
          # curl -fsSL 'https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/stable/etc/sonic.cfg' > /tmp/sonic.cfg
          - "{{ archivebox_data_directory }}/sonic.cfg:/etc/sonic.cfg"
        env:
          SEARCH_BACKEND_PASSWORD: "{{ archivebox_search_backend_password }}"
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ archivebox_user_id }}"
          PGID: "{{ archivebox_group_id }}"
        restart_policy: unless-stopped
        memory: "1g"
    - name: NoVNC Docker Container
      community.docker.docker_container:
        name: novnc
        image: theasp/novnc:latest
        pull: true
        ports:
          - "8088:8080"
        env:
          DISPLAY_WIDTH: "1920"
          DISPLAY_HEIGHT: "1080"
          RUN_XTERM: "no"
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ archivebox_user_id }}"
          PGID: "{{ archivebox_group_id }}"
        restart_policy: unless-stopped
        memory: "1g"

- name: Stop Archivebox
  block:
    - name: Stop novnc
      community.docker.docker_container:
        name: "novnc"
        state: absent
    - name: Stop sonic
      community.docker.docker_container:
        name: "sonic"
        state: absent
    - name: Stop archivebox scheduler
      community.docker.docker_container:
        name: "archivebox-scheduler"
        state: absent
    - name: Stop archivebox
      community.docker.docker_container:
        name: "archivebox"
        state: absent
  when: archivebox_enabled is false
