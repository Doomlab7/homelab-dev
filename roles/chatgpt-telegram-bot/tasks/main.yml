---
- name: Start Bot
  block:
    - name: Create Bot Data Directory
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ chatgpt_telegram_bot_user_id }}"
        group: "{{ chatgpt_telegram_bot_group_id }}"
      with_items:
        - "{{ chatgpt_telegram_bot_data_directory }}"
    - name: Bot Docker Container
      community.docker.docker_container:
        name: "{{ chatgpt_telegram_bot_container_name }}"
        image: "{{ chatgpt_telegram_bot_image_name }}:latest"
        pull: true
        volumes:
          - "{{ chatgpt_telegram_bot_data_directory }}/usage_logs:/app/usage_logs:rw"
        env:
          TZ: "{{ homelab_timezone }}"
          PUID: "{{ chatgpt_telegram_bot_user_id }}"
          PGID: "{{ chatgpt_telegram_bot_group_id }}"
          PLUGINS: "{{ chatgpt_telegram_bot_plugins }}"
          OPENAI_API_KEY: "{{ chatgpt_telegram_bot_open_api_key }}"
          TELEGRAM_BOT_TOKEN: "{{ chatgpt_telegram_bot_telegram_bot_token }}"
          ADMIN_USER_IDS: "{{ chatgpt_telegram_bot_admin_user_ids }}"
          ALLOWED_TELEGRAM_USER_IDS: "{{ chatgpt_telegram_bot_allowed_telegram_user_ids }}"
          ASSISTANT_PROMPT: "{{ chatgpt_telegram_bot_assistant_prompt }}"
        restart_policy: unless-stopped
        memory: "{{ chatgpt_telegram_bot_memory }}"
  when: chatgpt_telegram_bot_enabled is true
- name: Stop Bot
  block:
    - name: Stop Bot
      community.docker.docker_container:
        name: "{{ chatgpt_telegram_bot_container_name }}"
        state: absent
  when: chatgpt_telegram_bot_enabled is false
